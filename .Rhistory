left_join(nsp) |>
select(obywatelstwo=n2, `stali i czasowi`=value) |>
arrange(-`stali i czasowi`) |>
left_join(tab_krajowa) |>
mutate(relacja = (`stali i czasowi`-`stali`)/`stali`,
relacja = ifelse(is.nan(relacja), 0, relacja)) |>
select(obywatelstwo, `stali`, `stali i czasowi`, relacja) |>
kable(format.args = list(big.mark = " "), digits = 1)
library(glue)
library(lubridate)
library(readxl)
library(data.table)
library(stringr)
library(ggplot2)
fnames <- list.files(".", full.names = T)
fnames
fnames <- list.files(".", full.names = T, pattern = "*.xlsx")
fnames
pesel <- lapply(fnames, function(x) {
read_excel(path = x, skip =3, na = "<2",
col_names = c("teryt", "pow", "woj", "kob_tot", "mez_tot", "tot_tot",
paste0("mez_", years),
paste0("kob_", years)))
})
years <- c(seq(2022,2003,by=-1), 1998, 1993, 1988, 1983, 1978, 1973, 1968, 1963, 1958, 1900)
pesel <- lapply(fnames, function(x) {
read_excel(path = x, skip =3, na = "<2",
col_names = c("teryt", "pow", "woj", "kob_tot", "mez_tot", "tot_tot",
paste0("mez_", years),
paste0("kob_", years)))
})
names(pesel) <- basename(fnames)
pesel_dt <- rbindlist(pesel, idcol = "data")
pesel_dt[, data:=str_extract(data, "\\d{8}")]
pesel_dt_long <- melt(pesel_dt, id.vars = c("data", "teryt", "pow", "woj"), value.name = "counts", variable.name = "demo")
pesel_dt_long[is.na(counts), counts:=1]
pesel_dt_long[, c("plec", "wiek") := tstrsplit(demo, "_")]
pesel_dt_long[, demo:=NULL]
pesel_dt_long[plec == "kob", plec := "kobiety"]
pesel_dt_long[plec == "mez", plec := "mezczyzni"]
pesel_dt_long[plec == "tot", plec := "ogolem"]
pesel_dt_long[wiek == "tot", wiek := "ogolem"]
pesel_dt_long[, data:=ymd(data)]
pesel_dt_long[plec == "kobiety" & wiek %in% 2022:2004, plec2:="dziewczynki do 18"]
pesel_dt_long[plec == "mezczyzni" & wiek %in% 2022:2004, plec2:="chłopcy do 18"]
pesel_dt_long[plec == "mezczyzni" & !wiek %in% 2022:2004, plec2:="mężczyźni 18+"]
pesel_dt_long[plec == "kobiety" & !wiek %in% 2022:2004, plec2:="kobiety 18+"]
pesel_dt_long
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)]
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data, plec2)]
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data, plec2)] |>
ggplot(aes(x = data, y = n/1000, color = plec2, group = plec2)) +
geom_line() +
theme_bw() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)",
title = "Liczba cudzoziemców ze statusem UKR w okresie 2022-04-14 do 2022-11-24") +
scale_color_brewer(type = "qual", palette = "Dark2")
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
theme_bw() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)",
title = "Liczba cudzoziemców ze statusem UKR w okresie 2022-04-14 do 2022-11-24") +
scale_color_brewer(type = "qual", palette = "Dark2")
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)]
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)",
title = "Liczba cudzoziemców ze statusem UKR w okresie 2022-04-14 do 2022-11-24") +
scale_color_brewer(type = "qual", palette = "Dark2")
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)]
library(scales)
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_datetime(;abels = date_format("%Y-%M"))
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_datetime(labels = date_format("%Y-%M"))
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_date(labels = date_format("%Y-%M"))
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"))
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("1 month"))
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month"))
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1400))
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500))
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)]
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502, linetype = "dashed")
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502/1000, linetype = "dashed")
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)] |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców ze statusem UKR (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502/1000, linetype = "dashed")
pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)]
saveRDS(x = pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)],
file = "~/git/nauka/ncn-foreigners/papers/pan-short/data/status-ukr.rds")
saveRDS(x = pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)],
path = "~/git/nauka/ncn-foreigners/papers/pan-short/data/status-ukr.rds")
saveRDS(pesel_dt_long[plec != "ogolem" & wiek != "ogolem", .(n = sum(counts)), .(data)],
"~/git/nauka/ncn-foreigners/papers/pan-short/data/status-ukr.rds")
ukr <- readRDS("data/status-ukr.rds")
ukr |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców ze statusem UKR (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502/1000, linetype = "dashed")
ukr |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców ze statusem UKR (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502/1000, linetype = "dotted")
ukr |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców ze statusem UKR (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502/1000, linetype = "dotdash")
ukr |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców ze statusem UKR (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502/1000, linetype = "dotdash")
ukr
which.max(ukr$n)
ukr[111,]
#| label: fig-ukr-status
#| fig-cap: Liczba obywateli Ukrainy ze statusem UKR (w tys.) w okresie od 14 kwietnia 2022 do 21 lutego 2023
ukr <- readRDS("data/status-ukr.rds")
ukr |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców ze statusem UKR (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502/1000, linetype = "dotdash")
install_github("ncn-foreigners/nmar")
library(remotes)
install_github("ncn-foreigners/nmar")
install_github("~/Downloads/nmar-main.zip")
devtools::install("~/Downloads/nmar-main.zip")
install.packages("~/Downloads/nmar-main.zip", type = "source", repos = NULL)
install_github("~/Downloads/nmar-main")
devetools::install("~/Downloads/nmar-main")
devtools::install("~/Downloads/nmar-main")
devtools::install("~/Downloads/nmar-main/")
devtools::install("~/Downloads/nmar-main")
install.packages("~/Downloads/nmar-main", repos = NULL, type = "source")
install.packages("pryr")
install.packages("~/Downloads/nmar-main", repos = NULL, type = "source")
library(nmar)
N <- 5000
Z <- rnorm(N)
X <- rchisq(N,df=6)/2
Y <- 0.5*X + (Z*(X^(1/2)))/5
sim.data <- data.frame(Y,X,Z)
w <- function(theta,y){
ex <- exp(theta[1] + theta[2]*y)
return(ex/(1+ex))
}
resp <- w(c(0.8,-0.5),Y)
R <- rbinom(N,1,resp)
data.resp <- sim.data[R == TRUE,]
mx <- as.matrix(colMeans(sim.data[,c("X","Z")]))
data.missing <- data.frame(Y = ifelse(R==0,NA,Y),X = X,Z=Z)
empLik_with_rootsolve <- nmar(data = data.missing,
response = R~Y,
target = Y~X+Z,
response.family="logit",
pop.means = mx,
type="EL")
empLik_with_rootsolve
summary(empLik_with_rootsolve)
empLik_with_rootsolve
library(eba)
library(ebal)
treatment   <- c(rep(0,50),rep(1,30))
X           <- rbind(replicate(3,rnorm(50,0)),replicate(3,rnorm(30,.5)))
colnames(X) <- paste("x",1:3,sep="")
X
head(X)
eb.out <- ebalance(Treatment=treatment,
X=X)
eb.out
str(eb.out,1)
# means in treatment group data
apply(X[treatment==1,],2,mean)
# means in reweighted control group data
apply(X[treatment==0,],2,weighted.mean,w=eb.out$w)
# means in raw data control group data
apply(X[treatment==0,],2,mean)
install.packages(c("weightit", "cobalt"))
library(openai)
Sys.setenv(
OPENAI_API_KEY = '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'
)
library(data.table)
library(readxl)
library(ggplot2)
library(xtable)
library(vcd)
library(stringr)
library()
theme_set(theme_bw())
dane1 <- read_excel("~/git/zbiory/selectivv/selectivv-cudzoziemcy.xlsx") |> setDT()
dane2 <- read_excel("~/git/zbiory/selectivv/selectivv-cudzoziemcy.xlsx",sheet=2) |> setDT()
dane1[country %in% c("Ukraina", "Białoruś", "Rosja"), .(total=sum(`N unique users`)), .(period,country)] |>
ggplot(aes(x = period, y = total/1000, group = country, color = country)) +
geom_line() +
geom_point(data = data.frame(period = rep("2019 Q4", 3),
country = c("Ukraina", "Białoruś", "Rosja"),
total = c(1351418, 105404, 37030))) +
labs(x= "Okres", y= "Liczba cudzoziemców (w tys.)", color = "Kraj pochodzenia") +
scale_color_brewer(type="qual", palette = "Dark2") +
scale_y_continuous(limits = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dane1[country %in% c("Ukraina", "Białoruś", "Rosja"), .(total=sum(`N unique users`)), .(period,country)] |>
ggplot(aes(x = period, y = total/1000, group = country, color = country)) +
geom_line() +
geom_point(data = data.frame(period = rep("2019 Q4", 3),
country = c("Ukraina", "Białoruś", "Rosja"),
total = c(1351418, 105404, 37030))) +
labs(x= "Okres", y= "Liczba cudzoziemców (w tys.)", color = "Kraj pochodzenia") +
scale_color_brewer(type="qual", palette = "Dark2") +
scale_y_continuous(limits = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dane1[country %in% c("Ukraina", "Białoruś", "Rosja"), .(total=sum(`N unique users`)), .(time, period,country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total/1000, group = time, color = time)) +
geom_line() +
labs(x= "Okres", y= "Liczba cudzoziemców (w tys.)", color = "Długość pobytu") +
scale_color_brewer(type="qual", palette = "Dark2") +
facet_wrap(~country) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dane1[country %in% c("Ukraina", "Białoruś", "Rosja"), .(total=sum(`N unique users`)), .(period,country)] |>
ggplot(aes(x = period, y = total/1000, group = country, color = country)) +
geom_line() +
geom_point(data = data.frame(period = rep("2019 Q4", 3),
country = c("Ukraina", "Białoruś", "Rosja"),
total = c(1351418, 105404, 37030))) +
labs(x= "Okres", y= "Liczba cudzoziemców (w tys.)", color = "Kraj pochodzenia") +
scale_color_brewer(type="qual", palette = "Dark2") +
scale_y_continuous(limits = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dane1[country %in% c("Ukraina", "Białoruś", "Rosja"), .(total=sum(`N unique users`)), .(period,country)] |>
ggplot(aes(x = period, y = total/1000, group = country, color = country)) +
geom_line() +
geom_point(data = data.frame(period = rep("2019 Q4", 3),
country = c("Ukraina", "Białoruś", "Rosja"),
total = c(1351418, 105404, 37030))) +
labs(x= "Okres", y= "Liczba cudzoziemców (w tys.)", color = "Kraj pochodzenia") +
scale_color_brewer(type="qual", palette = "Dark2") +
scale_y_continuous(limits = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dane1[country %in% c("Ukraina", "Białoruś", "Rosja"), .(total=sum(`N unique users`)), .(period,country)] |>
ggplot(aes(x = period, y = total/1000, group = country, color = country)) +
geom_line() +
geom_point(data = data.frame(period = rep("2019 Q4", 3),
country = c("Ukraina", "Białoruś", "Rosja"),
total = c(1351418, 105404, 37030))) +
labs(x= "Okres", y= "Liczba cudzoziemców (w tys.)", color = "Kraj pochodzenia") +
scale_color_brewer(type="qual", palette = "Dark2") +
scale_y_continuous(limits = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) -> p1
p1
getwd()
saveRDS("/Users/berenz/git/nauka/ncn-foreigners/papers/pan-short/data/plot-1.rds")
saveRDS(p1, "/Users/berenz/git/nauka/ncn-foreigners/papers/pan-short/data/plot-1.rds")
dane2[region %in% c("Poznań") & country == c("Ukraina", "Białoruś", "Inne") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, group = time, fill = time)) +
geom_col(color = 'black') +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_fill_brewer(type="qual", palette = "Dark2") +
facet_wrap(~country, scales = "free_y")
dane2[region %in% c("Poznań") & country == c("Ukraina", "Białoruś", "Inne") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, group = time, fill = time)) +
geom_col(color = 'black') +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_fill_brewer(type="qual", palette = "Dark2") +
facet_wrap(~country)
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, group = time, fill = time)) +
geom_col(color = 'black') +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_fill_brewer(type="qual", palette = "Dark2") +
facet_wrap(~country)
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, group = time, fill = time)) +
geom_col(color = 'black') +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_fill_brewer(type="qual", palette = "Dark2")
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, group = time, fill = time)) +
geom_col(color = 'black') +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_fill_brewer(type="qual", palette = "Dark2")
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, color = time)) +
geom_line() +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_fill_brewer(type="qual", palette = "Dark2")
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, color = time, group = time)) +
geom_line() +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_fill_brewer(type="qual", palette = "Dark2")
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, color = time, group = time)) +
geom_line() +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_color_brewer(type="qual", palette = "Dark2")
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total, color = time, group = time)) +
geom_line() +
geom_point() +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_color_brewer(type="qual", palette = "Dark2")
p1
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total/1000, color = time, group = time)) +
geom_line() +
geom_point() +
labs(x= "Rok", y= "Liczba cudzoziemców", fill = "Długość pobytu") +
scale_color_brewer(type="qual", palette = "Dark2")
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total/1000, color = time, group = time)) +
geom_line() +
geom_point() +
labs(x= "Rok", y= "Liczba cudzoziemców (w tys.)", color = "Długość pobytu") +
scale_color_brewer(type="qual", palette = "Dark2")
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))] |>
ggplot(aes(x = period, y = total/1000, color = time, group = time)) +
geom_line() +
geom_point() +
labs(x= "Rok", y= "Liczba cudzoziemców (w tys.)", color = "Długość pobytu") +
scale_color_brewer(type="qual", palette = "Dark2")  -> p2
saveRDS(p2, "/Users/berenz/git/nauka/ncn-foreigners/papers/pan-short/data/plot-2.rds")
p2
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))]
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
dane2[region %in% c("Poznań") & country == c("Ukraina") &
period  != "2021 Q1", .(total = sum(`N unique users`)), .(time, period, country)][
, time:=factor(time, c("30 dni - 3 miesiące", "3 miesiące - 12 miesięcy", "ponad 12 miesięcy"))][]
p2
p2$data
p1 <- readRDS("data/plot-1.rds")
p1
p2
nsp_cudz_ogol  |>
select(val_1640249:val_1640260) |>
pivot_longer(cols = everything()) |>
mutate(id = as.integer(str_remove(name, "val_"))) |>
left_join(nsp) |>
select(obywatelstwo=n2, `stali i czasowi`=value) |>
arrange(-`stali i czasowi`) |>
left_join(tab_krajowa) |>
mutate(relacja = (`stali i czasowi`-`stali`)/`stali`,
relacja = ifelse(is.nan(relacja), 0, relacja)) |>
select(obywatelstwo, `stali`, `stali i czasowi`, relacja)
ukr |>
ggplot(aes(x = data, y = n/1000, group = 1)) +
geom_line() +
labs(color = "Płeć", x = "Stan na dany dzień", y  = "Liczba cudzoziemców ze statusem UKR (w tys.)")  +
scale_x_date(labels = date_format("%Y-%m"), breaks = date_breaks("3 month")) +
scale_y_continuous(limits = c(0, 1500)) +
geom_hline(yintercept = 908502/1000, linetype = "dotdash")
ukr
max(ukr$n)
#| out-width: 70%
#| out-height: 70%
#| label: fig-ukr-big-data1
#| fig-cap: Liczba cudzoziemców określona na podstawie danych ze smartfonów między 2018, a 2021 rokiem
p1 <- readRDS("data/plot-1.rds")
p1
p1$data
#| out-width: 70%
#| out-height: 70%
#| label: fig-ukr-big-data2
#| fig-cap: Liczba obywateli Ukrainy na podstawie danych ze smartfonów według długości pobytu w Poznaniu
p2 <- readRDS("data/plot-2.rds")
p2
p2 + geom_bar()
p2
p2$data
p2$data |> pivot_wider(names_from = "time", values_from = "total")
p2$data |> pivot_wider(names_from = "time", values_from = "total") |> View()
p2$data |> count(rok, wt = total)
p2$data |> count(period, wt = total)
p2$data
p2$data |> mutate(share=total/sum(total)*100 .by = period)
p2$data |> mutate(share=total/sum(total)*100, .by = period)
30,48474+30,87814+38,63712
30.48474+30.87814+38.63712
p2$data |> mutate(share=total/sum(total)*100, .by = period)
p2$data |> mutate(share=total/sum(total)*100, .by = period) |> select(period, time,share) |> pivot_longer(names_from = "time", values_from = "share")
p2$data |> mutate(share=total/sum(total)*100, .by = period) |> select(period, time,share)
p2$data |> mutate(share=total/sum(total)*100, .by = period) |> select(period, time,share) |> pivot_wider(names_from = "time", values_from = "share")
remotes::install_github("ncn-foreigners/singleRcapture")
library(singleRcapture)
?redoPopEstimation
Model <- estimatePopsize(formula = capture ~ nation + gender,
data = netherlandsimmigrant,
model = ztpoisson,
method = "IRLS")
Model
require(sandwich)
cov <- vcovHC(Model, type = "HC3")
summary(Model, cov = cov,
popSizeEst = redoPopEstimation(Model, cov = cov))
summary(Model)
popSizeEst
popSizeEst = redoPopEstimation(Model, cov = cov))
summary(Model, cov = cov,
popSizeEst = redoPopEstimation(Model, cov = cov))
summary(Model)
summary(Model, cov = cov,
popSizeEst = redoPopEstimation(Model, cov = vcovHC(Model, type = "HC2")))
vcovHC
vcovCL(model, cluster = ~ nation)
vcovCL(Model, cluster = ~ nation)
cov
vcovCL(Model, cluster = ~ nation)
summary(Model, cov = cov,
popSizeEst = redoPopEstimation(Model, cov = cov))
redoPopEstimation(Model, cov = vcovCL(Model, cluster = ~ nation))
redoPopEstimation(Model, cov = vcovCL(Model, cluster = ~ nation, type = "HC2"))
redoPopEstimation(Model, cov = vcovCL(Model, cluster = ~ nation, type = "HC1"))
summary(Model, cov = cov,
popSizeEst = redoPopEstimation(Model, cov = vcovHC(Model, type = "HC4")))
redoPopEstimation(Model, cov = vcovHC(Model, type = "HC4")))
redoPopEstimation(Model, cov = vcovHC(Model, type = "HC4"))
Model
